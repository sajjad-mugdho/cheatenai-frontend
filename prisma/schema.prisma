// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String          @id @default(cuid()) @map("_id")
  name          String?
  email         String?         @unique
  emailVerified DateTime?       @map("email_verified")
  password      String?
  image         String?         @default("https://utfs.io/f/35d57271-24e3-42c3-b517-5fbf788f2fb3-k6sn7y.jpg")
  credits       Int             @default(0)
  Account       Account[]
  Session       Session[]
  Authenticator Authenticator[]

  Article Article[]
  Code    Code[]
  Email   Email[]
  Blog    Blog[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Authenticator {
  id                   String  @id @default(cuid()) @map("_id")
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Article {
  id      String @id @default(cuid()) @map("_id")
  userId  String @map("user_id")
  role    String
  content String
  model   String
  prompt  String
  title   String

  time DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Code {
  id      String @id @default(cuid()) @map("_id")
  userId  String @map("user_id")
  role    String
  content String
  model   String
  prompt  String
  title   String

  time DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Email {
  id      String @id @default(cuid()) @map("_id")
  userId  String @map("user_id")
  role    String
  content String
  model   String
  prompt  String
  title   String

  time DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Blog {
  id      String @id @default(cuid()) @map("_id")
  userId  String @map("user_id")
  role    String
  content String
  model   String
  prompt  String
  title   String

  time DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
  id             String   @id @default(uuid()) @map("_id")
  userId         String   @map("user_id")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  replyCode      String
  replyDesc      String
  transID        String
  transDate      DateTime
  transAmount    Float
  transCurrency  String
  transOrder     String
  merchantID     String
  clientFullName String?
  clientPhone    String?
  clientEmail    String?
  paymentDetails String?
  transType      String?
  debitCompany   String?
  binCountry     String?
  pm             String?
  storageID      String?
  expMonth       String?
  expYear        String?
  signature      String
}
